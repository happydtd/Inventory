//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory.Client.WCF.WCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/Inventory.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Stock : Inventory.Client.WCF.WCFService.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseModel", Namespace="http://schemas.datacontract.org/2004/07/Inventory.WCF.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inventory.Client.WCF.WCFService.Order))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Inventory.Client.WCF.WCFService.Stock))]
    public partial class BaseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Inventory.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Order : Inventory.Client.WCF.WCFService.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFService.IInventoryAndOrderService", CallbackContract=typeof(Inventory.Client.WCF.WCFService.IInventoryAndOrderServiceCallback))]
    public interface IInventoryAndOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/CreateOrder", ReplyAction="http://tempuri.org/IInventoryAndOrderService/CreateOrderResponse")]
        bool CreateOrder(System.Guid stockid, string productname, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/CreateOrder", ReplyAction="http://tempuri.org/IInventoryAndOrderService/CreateOrderResponse")]
        System.Threading.Tasks.Task<bool> CreateOrderAsync(System.Guid stockid, string productname, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetStocks", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetStocksResponse")]
        Inventory.Client.WCF.WCFService.Stock[] GetStocks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetStocks", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetStocksResponse")]
        System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Stock[]> GetStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetStockById", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetStockByIdResponse")]
        Inventory.Client.WCF.WCFService.Stock GetStockById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetStockById", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetStockByIdResponse")]
        System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Stock> GetStockByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetOrders", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetOrdersResponse")]
        Inventory.Client.WCF.WCFService.Order[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryAndOrderService/GetOrders", ReplyAction="http://tempuri.org/IInventoryAndOrderService/GetOrdersResponse")]
        System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Order[]> GetOrdersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryAndOrderServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IInventoryAndOrderService/StockQuantityChanged")]
        void StockQuantityChanged();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryAndOrderServiceChannel : Inventory.Client.WCF.WCFService.IInventoryAndOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryAndOrderServiceClient : System.ServiceModel.DuplexClientBase<Inventory.Client.WCF.WCFService.IInventoryAndOrderService>, Inventory.Client.WCF.WCFService.IInventoryAndOrderService {
        
        public InventoryAndOrderServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public InventoryAndOrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public InventoryAndOrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryAndOrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryAndOrderServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool CreateOrder(System.Guid stockid, string productname, int quantity) {
            return base.Channel.CreateOrder(stockid, productname, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> CreateOrderAsync(System.Guid stockid, string productname, int quantity) {
            return base.Channel.CreateOrderAsync(stockid, productname, quantity);
        }
        
        public Inventory.Client.WCF.WCFService.Stock[] GetStocks() {
            return base.Channel.GetStocks();
        }
        
        public System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Stock[]> GetStocksAsync() {
            return base.Channel.GetStocksAsync();
        }
        
        public Inventory.Client.WCF.WCFService.Stock GetStockById(System.Guid id) {
            return base.Channel.GetStockById(id);
        }
        
        public System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Stock> GetStockByIdAsync(System.Guid id) {
            return base.Channel.GetStockByIdAsync(id);
        }
        
        public Inventory.Client.WCF.WCFService.Order[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<Inventory.Client.WCF.WCFService.Order[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
    }
}
